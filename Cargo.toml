[package]
name = "visio"
version = "0.5.0"
authors = ["Maciej Urban"]
edition = "2021"
description = "Embedded project simulating vision through haptic feedback for visually impaired people."
license = "MIT"
repository = "https://github.com/blanktiger/visio.git"

[lib]
name = "visiolib"
path = "src/lib.rs"
test = false
bench = false

[[bin]]
name = "visio"
path = "src/visio/visio.rs"
test = false
bench = false

[[bin]]
name = "ssd1306_i2c_reuse"
path = "src/visio/ssd1306_i2c_reuse.rs"
test = false
bench = false

[dependencies]
cortex-m = "0.7.3"
rp2040-boot2 = { version = "0.2.0", optional = true }
ssd1306 = "0.7.1"
rp2040-hal = { version = "0.9.0" }
cortex-m-rt = { version = "0.7.0", optional = true }
embedded-hal = { version = "0.2.4", features = ["unproven"] }
rtt-target = "0.4.0"
vl53l1x-uld = "2.0.0"
embedded-graphics = "0.7.1"
format_no_std = "1.0.0"
heapless = "0.7.16"
vl53l1-reg = "0.1.1"
pwm-pca9685 = "0.3.1"
shared-bus = "0.3.0"
anyhow = { version = "1.0.75", default-features = false }
embedded-alloc = "0.5.0"
panic-halt= "0.2.0"
nb = "1.0"
fugit = "0.3.5"

[dev-dependencies]
panic-halt= "0.2.0"
embedded-hal ="0.2.5"
nb = "1.0"
fugit = "0.3.5"

[features]
# This is the set of features we enable by default
default = ["boot2", "rt", "critical-section-impl", "rom-func-cache"]

# critical section that is safe for multicore use
critical-section-impl = ["rp2040-hal/critical-section-impl"]

# 2nd stage bootloaders for rp2040
boot2 = ["rp2040-boot2"]

# Minimal startup / runtime for Cortex-M microcontrollers
rt = ["cortex-m-rt", "rp2040-hal/rt"]

# This enables a fix for USB errata 5: USB device fails to exit RESET state on busy USB bus.
# Only required for RP2040 B0 and RP2040 B1, but it also works for RP2040 B2 and above
rp2040-e5 = ["rp2040-hal/rp2040-e5"]

# Memoize(cache) ROM function pointers on first use to improve performance
rom-func-cache = ["rp2040-hal/rom-func-cache"]

# Disable automatic mapping of language features (like floating point math) to ROM functions
disable-intrinsics = ["rp2040-hal/disable-intrinsics"]

# This enables ROM functions for f64 math that were not present in the earliest RP2040s
rom-v2-intrinsics = ["rp2040-hal/rom-v2-intrinsics"]
